@page
@model woodgrovedemo.Help.Pages.TokenAugmentationModel
@{
    ViewData["Title"] = "Custom claim provider";
    Layout = "_Layout";
}



<h1 style="margin-top: 25px; margin-bottom: 25px;">Add claims to security tokens from a REST API</h1>

<div>

    <p>
        When a user authenticates to an application, a <a
            href="https://learn.microsoft.com/entra/identity-platform/custom-claims-provider-overview" target="_blank"
            class="link-dark link-offset-2">custom claims provider</a> can be used to add claims into the token.
        A custom claims provider is made up of a custom authentication extension that calls an external REST API to
        fetch claims from external systems. In this demo shows how you can add custom claims from <a
            href="https://github.com/microsoft/woodgrove-auth-api" target="_blank"
            class="link-dark link-offset-2"></a>Woodgrove REST API into security tokens.
        Including the loyaltyNumber, loyaltySince, and loyaltyTier claims.
        These claims return by a custom authentication extension REST API with some random values.
    </p>

    <div class="alert alert-primary d-flex align-items-center" role="alert">
        <div>
            <i class="bi bi-github"></i> The <a target="_blank"
                href="https://github.com/microsoft/woodgrove-auth-api/blob/main/Controllers/OnTokenIssuanceStartController.cs">
                source code</a> for this demo is avaliable in our
            <a href="https://github.com/microsoft/woodgrove-auth-api" target="_blank">Woodgrove authentication API
                GitHub
                repository</a>.
        </div>
    </div>

    @await Html.PartialAsync("_StepsButtons.cshtml")

    <div class="bs-stepper vertical" id="Stepper">
        @await Html.PartialAsync("_Steps.cshtml", 15)

        <div class="bs-stepper-content">
            <div id="step-1" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger1">
                @await Html.PartialAsync("_Prerequisites.cshtml")

                <p>
                    To add a custom authentication extension, sign in to the <a href="https://entra.microsoft.com/"
                        target="_blank" class="link-dark link-offset-2">Microsoft Entra admin center</a>
                    and browse to <b>External Identities </b> > <b> Custom authentication extensions </b>.

                    Note, you can also browse to <b>Applications</b> > <b>Enterprise applications </b> > <b> Custom
                        authentication extensions </b>.
                    From the <b> Custom authentication extensions</b> page, select <b>Create a custom extension</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border"
                        src="~/Help/TokenAugmentation/Select-custom-authentication-extension.png">
                </a>
            </div>

            <div id="step-2" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger2">
                <p>
                    In <b>Basics</b>, select the <b>TokenIssuanceStart</b> event type and select <b>Next</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border"
                        src="~/Help/TokenAugmentation/New-custom-authentication-extension-step-1.png">
                </a>
            </div>
            <div id="step-3" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger3">
                In <b>Endpoint Configuration</b>, fill in the following properties:
                <ul>
                    <li><b>Name</b> - A name for your custom authentication extension. For example, <i>
                            Add claims from customer relationship REST API</i>.</li>
                    <li><b>Target URL</b> - The URL of your REST API.</li>
                    <li><b>Timeout in milliseconds</b> - The maximum number of retries the API endpoint will be called
                        in case of failure. If empty, will default to service default.</li>
                    <li><b>Maximum Retries</b> - The maximum number of retries the API endpoint will be called in case
                        of failure. If empty, will default to service default..</li>
                    <li><b>Description</b> - A description for your custom authentication extensions.</li>
                </ul>
                To continue, select <b>Next</b>.

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border"
                        src="~/Help/TokenAugmentation/New-custom-authentication-extension-step-2.png">
                </a>
            </div>

            <div id="step-4" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger4">
                <p>
                    To ensure the communications between the custom authentication extension and your REST API are
                    secured appropriately, multiple security controls must be applied. The first step is to create or
                    choose
                    an applicaion that Microsoft Entra ID uses the OAuth 2.0 client credentials grant flow to secure the
                    call to your API endpoint.
                </p>
                <p>
                    If this is your first custom authentication extension (if not, scroll down), in <b>API
                        Authentication</b>, select the
                    <b>Create new app registration</b> option to create an app registration
                    that represents your REST API.
                    Give the app a <b>name</b>, for example <b>Custom authentication extension security app</b> and
                    select <b>Next</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border"
                        src="~/Help/TokenAugmentation/New-custom-authentication-extension-step-3-a.png">
                </a>
                <br>

                <p style="padding-top: 20px;">
                    If you have already configured a custom authentication extension, in <b>API Authentication</b>,
                    select
                    the
                    <b>Select an existing app registration in this directory</b> option, and select the applicaion you
                    configured for the other custom authentication extensions.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border"
                        src="~/Help/TokenAugmentation/New-custom-authentication-extension-step-3-b.png">
                </a>
            </div>

            <div id="step-5" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger5">
                <p>
                    In <b>Claims</b>, enter the attributes that you expect your custom authentication extension to parse
                    from
                    your REST API and will be merged into the token. Then, to continue select <b>Next</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border"
                        src="~/Help/TokenAugmentation/New-custom-authentication-extension-step-4.png">
                </a>
            </div>

            <div id="step-6" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger6">
                <p>
                    Review your configuration and select <b>Create</b>, which registers the custom authentication
                    extension and the associated application registration
                    you selected or choose to create.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border"
                        src="~/Help/TokenAugmentation/New-custom-authentication-extension-step-5.png">
                </a>
            </div>

            <div id="step-7" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger7">
                <p>
                    If earlier you choose the <b>Create new app registration</b> option, after your custom
                    authentication
                    extension is created, you need to grant permissions to the API.

                    Open the <b>Overview</b> page of your new custom authentication extension. Under <b>API
                        Authentication</b>, select <b>Grant permission</b>.

                    A new window opens, and once signed in, it requests permissions to receive custom authentication
                    extension HTTP requests. This allows the custom authentication extension to authenticate to your
                    API. Select <b>Accept</b>.
                </p>
                <p>
                    Take a note of the <b>App ID</b> under
                    API Authentication, as it will be needed when you configure your REST API access token validation.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border"
                        src="~/Help/TokenAugmentation/New-custom-authentication-extension-step-6.png">
                </a>
            </div>

            <div id="step-8" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger8">
                <p>
                    At this point your custom authentication extension is configured but is not associated with any
                    application.
                    In the next few steps you will configure your application to add the attributes
                    returned from the custom authentication extension mapped into the security tokens.
                    From the menu, select <b>App registrations</b> and select your application. In this example we
                    select the Woodgrove Groceries
                    application.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/TokenAugmentation/Select-app.png">
                </a>
            </div>

            <div id="step-9" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger9">
                <p>
                    In your application registration, under <b>Manage</b>, select <b>Manifest</b>.
                    A web-based manifest editor opens, allowing you to edit
                    the manifest.
                    In the manifest, locate the <b>acceptMappedClaims</b> attribute, and set the value to <b>true</b>.
                    Set the <b>accessTokenAcceptedVersion</b> to <b>2</b>.
                    Select <b>Save</b> to save the changes.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/TokenAugmentation/App-manifest.png">
                </a>
            </div>

            <div id="step-10" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger10">
                <p>
                    To assign the custom authentication extension as a custom claims provider source, from the
                    app <b>Overview</b> page, select the link next to <b>Managed application in local directory</b>.
                    Note, you can also browse to <b>Enterprise applications</b>, then under <b>Manage</b>, select <b>All
                        applications</b>, and then select your application from the list.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/TokenAugmentation/Select-service-principal.png">
                </a>
            </div>

            <div id="step-11" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger11">
                <p>
                    From the menue, select <b>Single sign-on</b>. Then, under <b>Attributes & Claims</b>, select
                    <b>Edit</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/TokenAugmentation/Service-principal-sso.png">
                </a>
            </div>


            <div id="step-12" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger12">
                <p>
                    Expand the <b>Advanced settings</b> menu. Next to <b>Custom claims provider</b>, select
                    <b>Configure</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/TokenAugmentation/Configure-claims-provider.png">
                </a>
            </div>


            <div id="step-13" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger13">
                <p>
                    Expand the <b>Custom claims provider</b> drop-down box, and select the Token issuance event you
                    created
                    earlier. Select <b>Save</b> to save the changes.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/TokenAugmentation/Select-custom-auth-extension.png">
                </a>
            </div>

            <div id="step-14" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger14">
                <p>
                    Next, assign the attributes from the custom claims provider, which should be issued into the token
                    as claims:
                    Select <b>Add new claim</b> to add a new claim.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/TokenAugmentation/Add-claims-1.png">
                </a>
            </div>

            <div id="step-15" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger15">
                <p>
                    Provide a <b>name</b> to the claim you want to be issued, for example loyaltyNumber.

                    Under Source, select <b>Attribute</b>, and choose <b>customClaimsProvider.loyaltyNumber</b> from the
                    Source
                    attribute drop-down box. Note, the <b>name</b> can be differed from the source. For example, the
                    name can be
                    CustomerNumber, while the source must be one from the list.
                </p>

                <div class="alert alert-success" role="alert">
                    <h4 class="alert-heading">Well done!</h4>
                    <p>Your custom authentication extension is
                        configured, and
                        claims that it returns will be included in the access token for your application.</p>
                </div>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/TokenAugmentation/Add-claims-2.png">
                </a>
            </div>
        </div>
    </div>
</div>
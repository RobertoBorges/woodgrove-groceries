@page
@model woodgrovedemo.Help.Pages.RegisterAppModel
@{
    ViewData["Title"] = "App registration";
    Layout = "_Layout";
}

<h1 style="margin-top: 25px; margin-bottom: 25px;">App registrations</h1>


<div>

    <p>
        To enable your app to sign in with Microsoft Entra external ID you need to register the application in Microsoft
        Entra external ID directory.
        This page shows how we configured the Woodgrove Groceries application.
    </p>
    @await Html.PartialAsync("_StepsButtons.cshtml")

    <div class="bs-stepper vertical" id="Stepper">
        @await Html.PartialAsync("_Steps.cshtml", 10)

        <div class="bs-stepper-content">
            <div id="step-1" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger1">

                <p>
                    To register your own application, sign in to the <a href="https://entra.microsoft.com/"
                        target="_blank" class="link-dark link-offset-2">Microsoft Entra admin center</a>
                    and browse to <b>Applications </b> > <b> App registrations</b>. Then, select <b>+ New
                        registration</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/New-registration.png">
                </a>
            </div>

            <div id="step-2" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger2">
                <p>
                    In the <b>Register an application</b> page that appears, enter a meaningful application <b>Name</b>
                    that is
                    displayed to users of the app,
                    for example <b>Woodgrove Groceries</b>. Under <b>Supported account types</b>, select <b>Accounts in
                        this organizational directory only</b>.
                    In the <b>Platform</b> select the <b>Web</b> option and enter your app <b>Redirect URI</b>. The
                    redirect URI is the endpoint to which users are redirected by Microsoft Entra external ID after
                    their
                    authentication with Microsoft Entra ID external is completed.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/Register-an-application.png">
                </a>
            </div>
            <div id="step-3" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger3">
                <p>
                    The application's <b>Overview</b> pane displays upon successful registration. Record the
                    <b>Application
                        (client) ID</b> to be used in your application source code.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/App-ID.png">
                </a>
            </div>

            <div id="step-4" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger4">
                <p>
                    To add more <b>Redirect URIs</b>, or <b>Front-channel logout URL</b>, under <b>Manage</b> select
                    <b>Authentication</b>.
                    The <b>Front-channel logout URL</b> is where we send a request to have the application clear the
                    user's session data.
                    This is required for single sign-out to work correctly.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/Authentication.png">
                </a>
            </div>

            <div id="step-5" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger5">
                <p>
                    For a web application (Conditional client) to acquire an access token it needs a credential to prove
                    its identity to Microsoft Entra ID. You can add certificates, client secrets (a string), or
                    federated
                    identity credentials as
                    credentials to your confidential client app registration. In the Woodgrove
                    live demo we use a certificate. To add a certificate, select <b>Certificates & secrets</b> >
                    <b>Certificates</b> > <b>Upload certificate</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/Add-certificate.png">
                </a>
            </div>

            <div id="step-6" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger6">
                <p>
                    Select the file you want to upload. It must be one of the following file types: .cer, .pem, .crt.
                    then select <b>Add</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/Select-certificate.png">
                </a>
            </div>

            <div id="step-7" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger7">
                <p>
                    In the following steps you add the required permission for any web application.
                    Under <b>Manage</b>, select <b>API permissions</b> then, select <b>Add a permission</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/Api-permissions1.png">
                </a>
            </div>

            <div id="step-8" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger8">
                <p>
                    In the <b>Request API permissions</b>, select <b>Microsoft APIs</b> tab and then <b>Microsoft
                        Graph</b>.
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/Api-permissions2.png">
                </a>
            </div>

            <div id="step-9" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger9">
                <p>
                    Select the <b>Delegated permissions</b> option. Then, under <b>Select permissions</b> section,
                    search for and select both <b>openid</b> and <b>offline_access</b> permissions. To complete, select
                    the <b>Add permissions</b> button..
                </p>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/Api-permissions3.png">
                </a>
            </div>

            <div id="step-10" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger10">
                <p>
                    At this point, you've assigned the permissions correctly. However, since the tenant is a customer's
                    tenant, the consumer users themselves can't consent to these permissions. You as the admin must
                    consent to these permissions on behalf of all the users in the tenant:

                    Select <b>Grant admin consent for &lt;your tenant name&gt;</b>, then select <b>Yes</b>.
                </p>

                <div class="alert alert-success" role="alert">
                    <h4 class="alert-heading">Well done!</h4>
                    <p>Now your application is ready to use.</p>
                </div>

                <a href="#" class="pop" onclick="return false;">
                    <img class="img-fluid border" src="~/Help/RegisterApp/Api-permissions4.png">
                </a>
            </div>
        </div>
    </div>

    <div id="GraphApiContent">
        <h4 class="graph-header">Dependencies</h4>
        This script is self contained.

        <h4 style="padding-top: 25px;padding-bottom: 5px;">Register a web application</h4>
        <p>
            To <a
                href="https://learn.microsoft.com/en-us/graph/api/application-post-applications?view=graph-rest-beta&tabs=http"
                target="_blank" class="link-dark link-offset-2">register a web applicaiton</a>, use the following Microsoft
            Graph and replace.
        <ul>
            <li>Value of <b>displayName</b> with your app displayed name. For example, <i>Woodgrove Groceries</i></li>
            <li>Values of the <b>redirectUris</b> with the redirect URI of your applicaiton. For example,
                <i>https://woodgrovedemo.com/signin-oidc</i>
            </li>
        </ul>
        </p>
        <code style="color: black;">POST https://graph.microsoft.com/v1.0/applications</code>

        <pre>
{
    "<b>displayName</b>": "Woodgrove Groceries",
    "description": "Woodgrove Groceries live demo application",
    "signInAudience": "AzureADMyOrg",
    "api": {
        "acceptMappedClaims": true,
        "requestedAccessTokenVersion": 2
    },
    "requiredResourceAccess": [
        {
            "resourceAppId": "00000003-0000-0000-c000-000000000000",
            "resourceAccess": [
                {
                    "id": "37f7f235-527c-4136-accd-4a02d197296e",
                    "type": "Scope"
                },
                {
                    "id": "7427e0e9-2fba-42fe-b0c0-848c9e6a8182",
                    "type": "Scope"
                }
            ]
        }
    ],
    "web": {
        "<b>redirectUris</b>": [
            "https://woodgrovedemo.com/signin-oidc"
        ],
        "implicitGrantSettings": {
            "enableAccessTokenIssuance": false,
            "enableIdTokenIssuance": false
        }
    }
}
        </pre>

        <h4 class="graph-header">Create a service principal for your applicaiton</h4>
        <p>
            After you register you registered your application, <a
                href="https://learn.microsoft.com/en-us/graph/api/serviceprincipal-post-serviceprincipals?view=graph-rest-1.0&tabs=http"
                target="_blank" class="link-dark link-offset-2">create a service principal</a>. The following Microsoft
                Graph creates a service principal. Replace the <b>{app-ID}</b> with the app ID from the previous call
                (not the
                object ID).
        </p>
        <code style="color: black;">POST https://graph.microsoft.com/v1.0/servicePrincipals</code>

        <pre>
{
    "appId": "<b>{app-ID}</b>"
}
        </pre>

        <h4  class="graph-header">Consent to the required permissions</h4>

        <p>

            Since the tenant is a customer's tenant, the consumer users themselves can't consent to these permissions.
            You as the admin must  <a
                href="https://learn.microsoft.com/en-us/graph/api/oauth2permissiongrant-post?view=graph-rest-1.0&tabs=http"
                target="_blank" class="link-dark link-offset-2">consent to these permissions</a> on behalf of all the users in the tenant:

            Replace the <b>{service-principal-id}</b> with the service-principal ID you created in the previous step.

        </p>

        <code style="color: black;">POST https://graph.microsoft.com/v1.0/oauth2PermissionGrants</code>

        <pre>
{
    "clientId": "<b>{service-principal-id}</b>",
    "consentType": "AllPrincipals",
    "resourceId": "69309946-6ba5-4714-bb0e-38138430fcfd",
    "scope": "openid offline_access"
}
        </pre>

    </div>
</div>
